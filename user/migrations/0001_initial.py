# Generated by Django 2.2.1 on 2019-11-02 09:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=30, unique=True, verbose_name='이메일')),
                ('name', models.CharField(blank=True, max_length=10, unique=True, verbose_name='이름')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='생년월일')),
                ('phone', models.CharField(max_length=13, verbose_name='전화번호')),
                ('postcode', models.CharField(blank=True, max_length=15, verbose_name='우편번호')),
                ('address', models.CharField(blank=True, max_length=30, verbose_name='주소')),
                ('detail_address', models.CharField(blank=True, max_length=50, verbose_name='상세주소')),
                ('ref_address', models.CharField(blank=True, max_length=10, null=True, verbose_name='참고항목')),
                ('photo', models.FileField(default='user/profile/default.png', upload_to=user.models.user_profile, verbose_name='프로필 사진')),
                ('ticket', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='응모권')),
                ('ticketing', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='응모횟수')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='가입일')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '회원',
                'verbose_name_plural': '회원정보',
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='도구이름')),
                ('photo', models.ImageField(null=True, upload_to='user/item/')),
            ],
            options={
                'verbose_name': '도구',
                'verbose_name_plural': '도구',
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(max_length=10, verbose_name='등급')),
                ('requirement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(599)], verbose_name='등급조건')),
                ('ticket', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='등급별 응모권')),
                ('photo', models.ImageField(null=True, upload_to='user/rank/', verbose_name='사진')),
            ],
            options={
                'verbose_name': '등급',
                'verbose_name_plural': '등급관리',
            },
        ),
        migrations.CreateModel(
            name='HaveItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='도구 개수')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Item', verbose_name='도구')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='회원')),
            ],
            options={
                'verbose_name': '소유도구',
                'verbose_name_plural': '소유도구',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='rank',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='user.Rank', verbose_name='등급'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
